parameters:
- name: appName
  type: string
- name: configPattern
  type: string

steps:
- task: replacetokens@3
  displayName: 'Configure'
  inputs:
    targetFiles: '$(Pipeline.Workspace)/s/**/${{ parameters.configPattern }}'
    encoding: 'auto'
    writeBOM: true
    verbosity: 'detailed'
    actionOnMissing: 'warn'
    keepToken: false
    tokenPrefix: '#{'
    tokenSuffix: '}#'
    useLegacyPattern: false
    enableTelemetry: true
                
- task: ArchiveFiles@2
  displayName: 'Archive'
  inputs:
    rootFolderOrFile: '$(Pipeline.Workspace)/s/dist'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/${{ parameters.appName }}.zip'
    replaceExistingArchive: true

- task: PublishPipelineArtifact@1
  displayName: 'Publish'
  inputs:
    targetPath: $(Build.ArtifactStagingDirectory)
    artifactType: 'pipeline'
    artifactName: 'package'